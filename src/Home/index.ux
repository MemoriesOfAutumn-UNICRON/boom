<template>
  <div class="demo-page">
    <!-- <text class="title">欢迎进入{{title}}</text> -->
    <!-- 点击跳转详情页 -->
    <!-- <input class="btn" type="button" value="跳转到详情页" onclick="routeDetail"/> -->
    <tabs>
      <tab-content class="group-container">
        <div class="group-content" for="{{tabItem in tabItemList}}">
          <div class="introduce">
            <text class="introduce-detail">{{dataMap[tabItem].desc}}</text>
          </div>
        </div>
      </tab-content>
      <tab-bar class="footer-container">
        <text class="tab-text" for="{{tabItemList}}" onclick="routePath(dataMap[$item].path,{})">{{dataMap[$item].name}}</text>
      </tab-bar>
    </tabs>    
  </div>
</template>

<style>
  .demo-page {
    flex-direction: column;
    justify-content: center;
    align-items: center;
    background-image: url(../Common/boom-banner.jpg);
    background-size: cover;
  }

  .title {
    font-size: 40px;
    text-align: center;
  }

  .btn {
    width: 550px;
    height: 86px;
    margin-top: 75px;
    border-radius: 43px;
    background-color: #09ba07;
    font-size: 30px;
    color: #ffffff;
  }

  /* tab的样式 */
  .footer-container {
    height: 120px;
    border-top-width: 1px;
    border-color: #bbbbbb;
    background-color: #ffffff;
  }
  .group-container {
    flex: 1;
    flex-direction: column;
  }
  .group-content {
    flex-direction: column;
    flex: 1;
  }
  .introduce {
    padding-left: 80px;
    padding-right: 80px;
    margin-bottom: 80px;
    margin-top: 60px;
  }
  .tab-text {
    text-align: center;
  }
  .tab-text:active {
    color: #0faeff;
  }
</style>

<script>
  import router from '@system.router'
  import {tabsData} from './data'

  export default {
    // 页面级组件的数据模型，影响传入数据的覆盖机制：private内定义的属性不允许被覆盖
    private: {
      title: 'boom首页',
      dataMap: tabsData,
      tabItemList: [],
      selectedIdxMap:{}
    },
    onInit() {
      // 初始化tabItemList
      this.tabItemList = [].concat(Object.keys(this.dataMap))
      this.tabItemList.forEach(tabItem => {
        this.$set(`selectedIdxMap.${tabItem}`, -1)
        console.log(tabItem)
      })
    },
    // selectConFn (tabItem, index) {
    //   this.selectedIdxMap[tabItem] = this.selectedIdxMap[tabItem] === index ? -1 : index
    // },
    routePath (path, params) {
      console.log(path)
      console.log('打印东西=====')
      router.push({ uri: path, params: params })
    },
    routeDetail () {
      // 跳转到应用内的某个页面，router用法详见：文档->接口->页面路由
      console.log('打印东西呀！！！！！')
      // router.push ({
      //   uri: '/DemoDetail'
      // })
    }
  }
</script>
